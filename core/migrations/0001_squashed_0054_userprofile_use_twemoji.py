# Generated by Django 4.1.10 on 2023-08-10 19:48

import datetime

import django.db.models.deletion
import positions.fields
from django.conf import settings
from django.db import migrations, models

import core.models


class Migration(migrations.Migration):
    replaces = [
        ("core", "0001_initial"),
        ("core", "0002_auto_20170805_2322"),
        ("core", "0003_auto_20170806_0009"),
        ("core", "0004_auto_20170808_1751"),
        ("core", "0005_unit_subject"),
        ("core", "0006_auto_20171205_0903"),
        ("core", "0007_semester_show_invoices"),
        ("core", "0008_semester_registration_open"),
        ("core", "0009_auto_20180423_1534"),
        ("core", "0010_auto_20180531_1217"),
        ("core", "0011_auto_20180531_1305"),
        ("core", "0012_auto_20190322_0810"),
        ("core", "0013_auto_20190809_1211"),
        ("core", "0014_auto_20190830_1219"),
        ("core", "0015_auto_20200314_1453"),
        ("core", "0016_auto_20200810_1725"),
        ("core", "0017_auto_20200810_1725"),
        ("core", "0018_auto_20200908_1307"),
        ("core", "0019_auto_20210403_1636"),
        ("core", "0020_auto_20210427_1624"),
        ("core", "0021_auto_20210427_1624"),
        ("core", "0022_auto_20210504_0951"),
        ("core", "0023_auto_20210712_2343"),
        ("core", "0024_alter_unitgroup_slug"),
        ("core", "0025_remove_semester_registration_open"),
        ("core", "0026_semester_uses_legacy_pset_system"),
        ("core", "0027_alter_semester_uses_legacy_pset_system"),
        ("core", "0028_alter_unit_group"),
        ("core", "0029_userprofile"),
        ("core", "0030_unitgroup_hidden"),
        ("core", "0031_remove_semester_classroom_url"),
        ("core", "0032_unit_reveal_at_level"),
        ("core", "0033_remove_unit_reveal_at_level"),
        ("core", "0034_alter_unitgroup_subject"),
        ("core", "0035_alter_unitgroup_subject"),
        ("core", "0036_auto_20210926_1226"),
        ("core", "0037_rename_last_announce_dismiss_userprofile_last_email_dismiss"),
        ("core", "0038_semester_end_year"),
        ("core", "0039_alter_semester_calendar_url_meets_evan_and_more"),
        ("core", "0040_alter_calendar_urls_again"),
        ("core", "0041_unitgroup_artwork"),
        ("core", "0042_alter_unitgroup_subject"),
        ("core", "0043_unitgroup_artwork_thumb_md_and_more"),
        ("core", "0044_unitgroup_artist_name_unitgroup_artist_show"),
        ("core", "0045_remove_unitgroup_artist_show"),
        ("core", "0046_semester_one_semester_date"),
        ("core", "0047_remove_semester_calendar_url_meets_evan_and_more"),
        ("core", "0048_rename_calendar_url_no_meets_evan_semester_calendar_url"),
        ("core", "0049_userprofile_show_artwork_on_curriculum"),
        ("core", "0050_remove_userprofile_last_download_dismiss"),
        ("core", "0051_rename_last_email_dismiss_userprofile_last_notif_dismiss"),
        ("core", "0052_alter_userprofile_last_notif_dismiss"),
        ("core", "0053_userprofile_dynamic_progress"),
        ("core", "0054_userprofile_use_twemoji"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UnitGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The display name for the handout, like 'Weird Geo'",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="A description of what this unit is"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        choices=[
                            ("A", "Algebra (Hufflepuff)"),
                            ("C", "Combinatorics (Gryffindor)"),
                            ("G", "Geometry (Slytherin)"),
                            ("N", "Number Theory (Ravenclaw)"),
                            ("F", "Functional Equations"),
                            ("M", "Miscellaneous"),
                            ("K", "Secret"),
                        ],
                        help_text="The subject for the unit",
                        max_length=2,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="The slug for the filename for this unit group",
                        max_length=80,
                        unique=True,
                    ),
                ),
                (
                    "hidden",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this unit is hidden from students",
                    ),
                ),
                (
                    "artwork",
                    models.ImageField(
                        blank=True,
                        help_text="Artwork for this unit",
                        null=True,
                        upload_to=core.models.artwork_image_file_name,
                    ),
                ),
                (
                    "artwork_thumb_md",
                    models.ImageField(
                        blank=True,
                        help_text="Artwork for this unit",
                        null=True,
                        upload_to=core.models.artwork_thumb_md_file_name,
                    ),
                ),
                (
                    "artwork_thumb_sm",
                    models.ImageField(
                        blank=True,
                        help_text="Artwork for this unit",
                        null=True,
                        upload_to=core.models.artwork_thumb_md_file_name,
                    ),
                ),
                (
                    "artist_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the artist for the unit artwork.",
                        max_length=64,
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="The version code for the handout, like 'ZGX'",
                        max_length=255,
                    ),
                ),
                (
                    "position",
                    positions.fields.PositionField(
                        default=-1,
                        help_text="The ordering of the relative handouts to each other.",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        default=1,
                        help_text="The group that this unit belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.unitgroup",
                    ),
                ),
            ],
            options={
                "ordering": ("position",),
                "unique_together": {("group", "code")},
            },
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Text description such as 'Year III'",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the semester is currently active (there should thus be at most one active semester).",
                    ),
                ),
                (
                    "show_invoices",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to display invoices for this semester.",
                    ),
                ),
                (
                    "exam_family",
                    models.CharField(
                        choices=[
                            ("Waltz", "Waltz"),
                            ("Foxtrot", "Foxtrot"),
                            ("", "--"),
                        ],
                        default="",
                        help_text="The family of practice exams to display.",
                        max_length=10,
                    ),
                ),
                (
                    "social_url",
                    models.URLField(
                        blank=True,
                        help_text="The link to social platform for this year.",
                        max_length=128,
                    ),
                ),
                (
                    "gradescope_key",
                    models.CharField(
                        blank=True,
                        help_text="The entry code for GradeScope this semester.",
                        max_length=10,
                    ),
                ),
                (
                    "hour_rate",
                    models.PositiveSmallIntegerField(
                        default=80, help_text="The hourly rate for the semester."
                    ),
                ),
                (
                    "prep_rate",
                    models.PositiveSmallIntegerField(
                        default=240, help_text="The prep rate for the semester."
                    ),
                ),
                (
                    "calendar_url",
                    models.URLField(
                        blank=True, help_text="Link to calendar", max_length=1024
                    ),
                ),
                (
                    "first_payment_deadline",
                    models.DateTimeField(
                        blank=True, help_text="Deadline for nonzero payment.", null=True
                    ),
                ),
                (
                    "most_payment_deadline",
                    models.DateTimeField(
                        blank=True,
                        help_text="Deadline for two-thirds of the payment.",
                        null=True,
                    ),
                ),
                (
                    "uses_legacy_pset_system",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the pset uses the old system of upload checking",
                    ),
                ),
                (
                    "end_year",
                    models.IntegerField(
                        default=0, help_text="The year in which OTIS will end"
                    ),
                ),
                (
                    "one_semester_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date after which invoices are only charged for one semester.",
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "show_bars",
                    models.BooleanField(
                        default=True,
                        help_text="Displays the level bars on the main portal",
                        verbose_name="Level bars",
                    ),
                ),
                (
                    "show_completed_by_default",
                    models.BooleanField(
                        default=True,
                        help_text="Displays completed units on the main portal by default",
                        verbose_name="Show completed",
                    ),
                ),
                (
                    "show_locked_by_default",
                    models.BooleanField(
                        default=True,
                        help_text="Displays locked units on the main portal by default",
                        verbose_name="Show locked",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        help_text="The user these preferences belong to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_notif_dismiss",
                    models.DateTimeField(
                        default=datetime.datetime(
                            1970, 1, 1, 0, 0, tzinfo=datetime.timezone.utc
                        ),
                        help_text="Last time user dismissed the notifications modal.",
                    ),
                ),
                (
                    "last_seen",
                    models.DateTimeField(
                        default=datetime.datetime(
                            1970, 1, 1, 0, 0, tzinfo=datetime.timezone.utc
                        ),
                        help_text="Last time user was seen at all",
                    ),
                ),
                (
                    "show_artwork_on_curriculum",
                    models.BooleanField(
                        default=True,
                        help_text="Show the artwork on the curriculum table",
                        verbose_name="Show artwork",
                    ),
                ),
                (
                    "dynamic_progress",
                    models.BooleanField(
                        default=False,
                        help_text="Level meters show progression towards the next value to level up rather than a fixed max value",
                        verbose_name="Dynamic level meters progression",
                    ),
                ),
                (
                    "use_twemoji",
                    models.BooleanField(
                        default=False,
                        help_text="Uses Twemoji for emojis instead of system emojis.",
                        verbose_name="Use Twemoji",
                    ),
                ),
            ],
        ),
    ]
